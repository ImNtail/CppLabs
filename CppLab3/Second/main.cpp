/*
Дополнить код задания 3 лабораторной работы № 2, написав еще два класса по
предметной области, в соответствии с вариантом. Продумать и корректно реализовать
схему наследования классов. В главной функции продемонстрировать применение
интерфейса, полиморфизм и RTTI на примере 3-4 объектов классов, по аналогии с
заданием 1.
Примечание. Данное задание творческое. Вы можете свободно вводить различные
свойства и метода классов, не указанные явно в задании.

Вариант 7
Класс СТАДИОН + классы КОРТ, СПОРТИВНОЕ СООРУЖЕНИЕ.
Реализовать схему наследования классов и корректно распределить по классам данные:
адрес, футбольный клуб, количество секторов, вместимость, посещаемость, площадь,
тип покрытия, количество абонементов.
Интерфейс предоставителя абонементов ISeasonTicketProvider с методом void
ticket() – сгенерировать новый абонемент с выдачей сообщения на экран номера
абонемента. Реализация метода в классе стадиона: при выдаче абонемента (все
свободные места для абонементов хранятся в файле) уменьшается количество
свободных абонементов; максимум – 100 билетов. Реализация метода в классе корта:
выдать абонемент можно только на летние месяцы (если текущий месяц – не летний, то
не выдать билет); максимум – 15 билетов. В main() создать 1 корт и 2 стадиона,
продемонстрировать полиморфизм ticket().
*/

#include <iostream>
#include "Stadium.h"
#include "Court.h"
#include "ISeasonTicketProvider.h"

int main()
{
	Stadium s1;
	s1.setAddress("2 Chelyuskintsev street");
	s1.setFootballClub("Shakhtar");
	s1.setSectors(4);
	s1.setCapacity(100000);
	s1.setAttendance(90.0);
	Stadium* s2 = new Stadium("133 Artyoma street", "RSK Olympic", 3, 35000, 75.0);
	Court* c1 = new Court("56 Kirova street", 10000, 30.0, "plastic");
	SportsConstruction* sportsConstructions[3] = { &s1, s2, c1 };

	for (int i = 0; i < 3; i++)
	{
		ISeasonTicketProvider* isProvider = dynamic_cast<ISeasonTicketProvider*>(sportsConstructions[i]);
		if (isProvider)
		{
			isProvider->ticket();
			std::cout << *(sportsConstructions[i]);
		}
	}

	for (int i = 1; i < 3; i++)
		delete sportsConstructions[i];

	return 0;
}